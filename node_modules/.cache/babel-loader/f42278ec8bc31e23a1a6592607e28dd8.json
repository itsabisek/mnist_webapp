{"ast":null,"code":"var _jsxFileName = \"/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/PlotChart.js\";\nimport React from 'react';\n\nvar Chart = require('chart.js');\n\nlet myChart = null;\nexport class PlotChart extends React.Component {\n  componentDidMount() {\n    // let canvas = this.refs.chart\n    // canvas.style.marginBottom = \"7.8%\"\n    // canvas.parentNode.style.height = \"500px\"\n    // canvas.parentNode.style.widht = \"20px\"\n    this.plot();\n  }\n\n  plot() {\n    const ctx = this.refs.chart.getContext('2d');\n    myChart = new Chart(ctx, {\n      type: 'horizontalBar',\n      data: {\n        labels: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n        datasets: [{\n          label: 'Predicted Probability',\n          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          backgroundColor: ['grey', 'grey', 'grey', 'grey', 'grey', 'grey', 'grey', 'grey', 'grey', 'grey'],\n          borderColor: [],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            display: false,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              beginAtZero: true,\n              fontSize: 25,\n              fontColor: 'black'\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  static updateChart(newDataset) {\n    console.log(newDataset);\n    myChart.data.datasets[0] = newDataset;\n    myChart.update();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chartContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"chartCanvas\",\n      ref: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Sorry your browser does not support plotting this chart\"));\n  }\n\n}","map":{"version":3,"sources":["/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/PlotChart.js"],"names":["React","Chart","require","myChart","PlotChart","Component","componentDidMount","plot","ctx","refs","chart","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","xAxes","display","gridLines","yAxes","ticks","beginAtZero","fontSize","fontColor","updateChart","newDataset","console","log","update","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,OAAO,GAAG,IAAd;AAEA,OAAO,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAE9CC,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA;AACA;AAEA,SAAKC,IAAL;AACA;;AAEDA,EAAAA,IAAI,GAAG;AACN,UAAMC,GAAG,GAAG,KAAKC,IAAL,CAAUC,KAAV,CAAgBC,UAAhB,CAA2B,IAA3B,CAAZ;AACAR,IAAAA,OAAO,GAAG,IAAIF,KAAJ,CAAUO,GAAV,EAAe;AACxBI,MAAAA,IAAI,EAAE,eADkB;AAExBC,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAE,CACP,GADO,EAEP,GAFO,EAGP,GAHO,EAIP,GAJO,EAKP,GALO,EAMP,GANO,EAOP,GAPO,EAQP,GARO,EASP,GATO,EAUP,GAVO,CADH;AAaLC,QAAAA,QAAQ,EAAE,CACT;AACCC,UAAAA,KAAK,EAAE,uBADR;AAECH,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAFP;AAGCI,UAAAA,eAAe,EAAE,CAChB,MADgB,EAEhB,MAFgB,EAGhB,MAHgB,EAIhB,MAJgB,EAKhB,MALgB,EAMhB,MANgB,EAOhB,MAPgB,EAQhB,MARgB,EAShB,MATgB,EAUhB,MAVgB,CAHlB;AAeCC,UAAAA,WAAW,EAAE,EAfd;AAgBCC,UAAAA,WAAW,EAAE;AAhBd,SADS;AAbL,OAFkB;AAoCxBC,MAAAA,OAAO,EAAE;AACRC,QAAAA,mBAAmB,EAAE,KADb;AAERC,QAAAA,MAAM,EAAE;AACPC,UAAAA,KAAK,EAAE,CACN;AACCC,YAAAA,OAAO,EAAE,KADV;AAECC,YAAAA,SAAS,EAAE;AACVD,cAAAA,OAAO,EAAE;AADC;AAFZ,WADM,CADA;AAUPE,UAAAA,KAAK,EAAE,CACN;AACCD,YAAAA,SAAS,EAAE;AACVD,cAAAA,OAAO,EAAE;AADC,aADZ;AAICG,YAAAA,KAAK,EAAE;AACNC,cAAAA,WAAW,EAAE,IADP;AAENC,cAAAA,QAAQ,EAAE,EAFJ;AAGNC,cAAAA,SAAS,EAAE;AAHL;AAJR,WADM;AAVA;AAFA;AApCe,KAAf,CAAV;AA+DA;;AAED,SAAOC,WAAP,CAAmBC,UAAnB,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA7B,IAAAA,OAAO,CAACU,IAAR,CAAaE,QAAb,CAAsB,CAAtB,IAA2BiB,UAA3B;AACA7B,IAAAA,OAAO,CAACgC,MAAR;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACR,WAAQ;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,GAAG,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADO,CAAR;AAKA;;AA3F6C","sourcesContent":["import React from 'react'\nvar Chart = require('chart.js')\nlet myChart = null\n\nexport class PlotChart extends React.Component {\n\n\tcomponentDidMount() {\n\t\t// let canvas = this.refs.chart\n\t\t// canvas.style.marginBottom = \"7.8%\"\n\t\t// canvas.parentNode.style.height = \"500px\"\n\t\t// canvas.parentNode.style.widht = \"20px\"\n\n\t\tthis.plot()\n\t}\n\n\tplot() {\n\t\tconst ctx = this.refs.chart.getContext('2d')\n\t\tmyChart = new Chart(ctx, {\n\t\t\ttype: 'horizontalBar',\n\t\t\tdata: {\n\t\t\t\tlabels: [\n\t\t\t\t\t'0',\n\t\t\t\t\t'1',\n\t\t\t\t\t'2',\n\t\t\t\t\t'3',\n\t\t\t\t\t'4',\n\t\t\t\t\t'5',\n\t\t\t\t\t'6',\n\t\t\t\t\t'7',\n\t\t\t\t\t'8',\n\t\t\t\t\t'9'\n\t\t\t\t],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Predicted Probability',\n\t\t\t\t\t\tdata: [0,0,0,0,0,0,0,0,0,0],\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey',\n\t\t\t\t\t\t\t'grey'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tborderColor: [],\n\t\t\t\t\t\tborderWidth: 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tscales: {\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tfontSize: 25,\n\t\t\t\t\t\t\t\tfontColor: 'black'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tstatic updateChart(newDataset) {\n\t\t\tconsole.log(newDataset);\n\t\t\tmyChart.data.datasets[0] = newDataset\n\t\t\tmyChart.update()\n\t}\n\n\n\trender() {\n\t\treturn (<div id=\"chartContainer\">\n\t\t\t<canvas id=\"chartCanvas\" ref=\"chart\">\n\t\t\t\tSorry your browser does not support plotting this chart\n\t\t\t</canvas>\n\t\t</div>)\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}