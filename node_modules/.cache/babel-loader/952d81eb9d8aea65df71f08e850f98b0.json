{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shader_compiler_1 = require(\"./shader_compiler\");\n\nvar TileProgram = function () {\n  function TileProgram(aShape, reps) {\n    this.variableNames = ['A'];\n    var outputShape = new Array(aShape.length);\n\n    for (var i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[i] * reps[i];\n    }\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n    var sourceCoords = getSourceCoords(aShape);\n    this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n  }\n\n  return TileProgram;\n}();\n\nexports.TileProgram = TileProgram;\n\nfunction getSourceCoords(aShape) {\n  var rank = aShape.length;\n\n  if (rank > 4) {\n    throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n  }\n\n  if (rank === 1) {\n    return \"imod(resRC, \" + aShape[0] + \")\";\n  }\n\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n  }\n\n  return sourceCoords.join();\n}","map":null,"metadata":{},"sourceType":"script"}