{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n\nvar K = require(\"./backend/tfjs_backend\");\n\nvar errors_1 = require(\"./errors\");\n\nfunction getActivation(activationType) {\n  if (activationType == null) {\n    return linear;\n  } else if (activationType.toLowerCase() === 'elu') {\n    return elu;\n  } else if (activationType.toLowerCase() === 'hardsigmoid') {\n    return hardSigmoid;\n  } else if (activationType.toLowerCase() === 'linear') {\n    return linear;\n  } else if (activationType.toLowerCase() === 'relu') {\n    return relu;\n  } else if (activationType.toLowerCase() === 'relu6') {\n    return relu6;\n  } else if (activationType.toLowerCase() === 'selu') {\n    return selu;\n  } else if (activationType.toLowerCase() === 'sigmoid') {\n    return sigmoid;\n  } else if (activationType.toLowerCase() === 'softmax') {\n    return softmax;\n  } else if (activationType.toLowerCase() === 'softplus') {\n    return softplus;\n  } else if (activationType.toLowerCase() === 'softsign') {\n    return softsign;\n  } else if (activationType.toLowerCase() === 'tanh') {\n    return tanh;\n  } else {\n    throw new errors_1.ValueError(\"Unsupported activation function \" + activationType);\n  }\n}\n\nexports.getActivation = getActivation;\n\nfunction elu(x, alpha) {\n  if (alpha === void 0) {\n    alpha = 1;\n  }\n\n  return K.elu(x, alpha);\n}\n\nexports.elu = elu;\n\nfunction selu(x) {\n  return K.selu(x);\n}\n\nexports.selu = selu;\n\nfunction relu(x) {\n  return K.relu(x);\n}\n\nexports.relu = relu;\n\nfunction relu6(x) {\n  return K.minimum(tfjs_core_1.scalar(6.0), K.relu(x));\n}\n\nexports.relu6 = relu6;\n\nfunction linear(x) {\n  return x;\n}\n\nexports.linear = linear;\n\nfunction sigmoid(x) {\n  return K.sigmoid(x);\n}\n\nexports.sigmoid = sigmoid;\n\nfunction hardSigmoid(x) {\n  return K.hardSigmoid(x);\n}\n\nexports.hardSigmoid = hardSigmoid;\n\nfunction softplus(x) {\n  return K.softplus(x);\n}\n\nexports.softplus = softplus;\n\nfunction softsign(x) {\n  return K.softsign(x);\n}\n\nexports.softsign = softsign;\n\nfunction tanh(x) {\n  return K.tanh(x);\n}\n\nexports.tanh = tanh;\n\nfunction softmax(x, axis) {\n  if (axis === void 0) {\n    axis = -1;\n  }\n\n  return K.softmax(x, axis);\n}\n\nexports.softmax = softmax;\n\nfunction serializeActivation(activation) {\n  return activation.name;\n}\n\nexports.serializeActivation = serializeActivation;","map":null,"metadata":{},"sourceType":"script"}