{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar common_1 = require(\"../backend/common\");\n\nvar K = require(\"../backend/tfjs_backend\");\n\nvar topology_1 = require(\"../engine/topology\");\n\nvar errors_1 = require(\"../errors\");\n\nvar generic_utils_1 = require(\"../utils/generic_utils\");\n\nvar ZeroPadding2D = function (_super) {\n  __extends(ZeroPadding2D, _super);\n\n  function ZeroPadding2D(config) {\n    var _this = this;\n\n    if (config == null) {\n      config = {};\n    }\n\n    _this = _super.call(this, config) || this;\n    _this.dataFormat = config.dataFormat == null ? common_1.imageDataFormat() : config.dataFormat;\n\n    if (config.padding == null) {\n      _this.padding = [[1, 1], [1, 1]];\n    } else if (typeof config.padding === 'number') {\n      _this.padding = [[config.padding, config.padding], [config.padding, config.padding]];\n    } else {\n      config.padding = config.padding;\n\n      if (config.padding.length !== 2) {\n        throw new errors_1.ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" + (\"received a length-\" + config.padding.length + \" array.\"));\n      }\n\n      var heightPadding = void 0;\n      var widthPadding = void 0;\n\n      if (typeof config.padding[0] === 'number') {\n        heightPadding = [config.padding[0], config.padding[0]];\n        widthPadding = [config.padding[1], config.padding[1]];\n      } else {\n        config.padding = config.padding;\n\n        if (config.padding[0].length !== 2) {\n          throw new errors_1.ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" + (\"but received a length-\" + config.padding[0].length + \" array.\"));\n        }\n\n        heightPadding = config.padding[0];\n\n        if (config.padding[1].length !== 2) {\n          throw new errors_1.ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" + (\"but received a length-\" + config.padding[1].length + \" array.\"));\n        }\n\n        widthPadding = config.padding[1];\n      }\n\n      _this.padding = [heightPadding, widthPadding];\n    }\n\n    _this.inputSpec = [new topology_1.InputSpec({\n      ndim: 4\n    })];\n    return _this;\n  }\n\n  ZeroPadding2D.prototype.computeOutputShape = function (inputShape) {\n    inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n    var rows;\n    var cols;\n\n    if (this.dataFormat === 'channelsFirst') {\n      if (inputShape[2] != null && inputShape[2] >= 0) {\n        rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n      } else {\n        rows = null;\n      }\n\n      if (inputShape[3] != null && inputShape[3] >= 0) {\n        cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n      } else {\n        cols = null;\n      }\n\n      return [inputShape[0], inputShape[1], rows, cols];\n    } else {\n      if (inputShape[1] != null && inputShape[1] >= 0) {\n        rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n      } else {\n        rows = null;\n      }\n\n      if (inputShape[2] != null && inputShape[2] >= 0) {\n        cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n      } else {\n        cols = null;\n      }\n\n      return [inputShape[0], rows, cols, inputShape[3]];\n    }\n  };\n\n  ZeroPadding2D.prototype.call = function (inputs, kwargs) {\n    return K.spatial2dPadding(generic_utils_1.getExactlyOneTensor(inputs), this.padding, this.dataFormat);\n  };\n\n  ZeroPadding2D.prototype.getClassName = function () {\n    return 'ZeroPadding2D';\n  };\n\n  ZeroPadding2D.prototype.getConfig = function () {\n    var config = {\n      padding: this.padding,\n      dataFormat: this.dataFormat\n    };\n\n    var baseConfig = _super.prototype.getConfig.call(this);\n\n    Object.assign(config, baseConfig);\n    return config;\n  };\n\n  return ZeroPadding2D;\n}(topology_1.Layer);\n\nexports.ZeroPadding2D = ZeroPadding2D;\ngeneric_utils_1.ClassNameMap.register('ZeroPadding2D', ZeroPadding2D);","map":null,"metadata":{},"sourceType":"script"}