{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n\nvar K = require(\"./backend/tfjs_backend\");\n\nvar errors_1 = require(\"./errors\");\n\nvar losses_1 = require(\"./losses\");\n\nfunction binaryAccuracy(yTrue, yPred) {\n  var threshold = K.scalarTimesArray(K.getScalar(0.5), tfjs_core_1.onesLike(yPred));\n  var yPredThresholded = K.cast(K.greater(yPred, threshold), yTrue.dtype);\n  return K.mean(K.equal(yTrue, yPredThresholded), -1);\n}\n\nexports.binaryAccuracy = binaryAccuracy;\n\nfunction categoricalAccuracy(yTrue, yPred) {\n  return K.cast(K.equal(K.argmax(yTrue, -1), K.argmax(yPred, -1)), 'float32');\n}\n\nexports.categoricalAccuracy = categoricalAccuracy;\n\nfunction binaryCrossentropy(yTrue, yPred) {\n  return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\n\nexports.binaryCrossentropy = binaryCrossentropy;\n\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n  throw new errors_1.NotImplementedError();\n}\n\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\n\nfunction topKCategoricalAccuracy(yTrue, yPred) {\n  throw new errors_1.NotImplementedError();\n}\n\nexports.topKCategoricalAccuracy = topKCategoricalAccuracy;\n\nfunction sparseTopKCategoricalAccuracy(yTrue, yPred) {\n  throw new errors_1.NotImplementedError();\n}\n\nexports.sparseTopKCategoricalAccuracy = sparseTopKCategoricalAccuracy;\nexports.mse = losses_1.meanSquaredError;\nexports.MSE = losses_1.meanSquaredError;\nexports.mae = losses_1.meanAbsoluteError;\nexports.MAE = losses_1.meanAbsoluteError;\nexports.mape = losses_1.meanAbsolutePercentageError;\nexports.MAPE = losses_1.meanAbsolutePercentageError;\nexports.categoricalCrossentropy = losses_1.categoricalCrossentropy;\nexports.cosine = losses_1.cosineProximity;\nexports.sparseCategoricalCrossentropy = losses_1.sparseCategoricalCrossentropy;\n\nfunction get(identifier) {\n  var metricsMap = {\n    binaryAccuracy: binaryAccuracy,\n    categoricalAccuracy: categoricalAccuracy,\n    categoricalCrossentropy: exports.categoricalCrossentropy,\n    sparseCategoricalCrossentropy: exports.sparseCategoricalCrossentropy,\n    mse: exports.mse,\n    MSE: exports.MSE,\n    mae: exports.mae,\n    MAE: exports.MAE,\n    mape: exports.mape,\n    MAPE: exports.MAPE,\n    cosine: exports.cosine\n  };\n\n  if (typeof identifier === 'string' && identifier in metricsMap) {\n    return metricsMap[identifier];\n  } else if (typeof identifier !== 'string' && identifier != null) {\n    return identifier;\n  } else {\n    throw new errors_1.ValueError(\"Unknown metric \" + identifier);\n  }\n}\n\nexports.get = get;","map":null,"metadata":{},"sourceType":"script"}