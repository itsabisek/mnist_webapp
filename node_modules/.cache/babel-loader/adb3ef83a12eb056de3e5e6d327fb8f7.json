{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar doc_1 = require(\"../doc\");\n\nvar environment_1 = require(\"../environment\");\n\nvar util = require(\"../util\");\n\nvar axis_util_1 = require(\"./axis_util\");\n\nvar operation_1 = require(\"./operation\");\n\nvar ReverseOps = function () {\n  function ReverseOps() {}\n\n  ReverseOps.reverse1d = function (x) {\n    util.assert(x.rank === 1, \"Error in reverse1D: x must be rank 1 but got\\n             rank \" + x.rank + \".\");\n    return ReverseOps.reverse(x, 0);\n  };\n\n  ReverseOps.reverse2d = function (x, axis) {\n    util.assert(x.rank === 2, \"Error in reverse2D: x must be rank 2 but got\\n             rank \" + x.rank + \".\");\n    return ReverseOps.reverse(x, axis);\n  };\n\n  ReverseOps.reverse3d = function (x, axis) {\n    util.assert(x.rank === 3, \"Error in reverse3D: x must be rank 3 but got\\n             rank \" + x.rank + \".\");\n    return ReverseOps.reverse(x, axis);\n  };\n\n  ReverseOps.reverse4d = function (x, axis) {\n    util.assert(x.rank === 4, \"Error in reverse4D: x must be rank 4 but got\\n             rank \" + x.rank + \".\");\n    return ReverseOps.reverse(x, axis);\n  };\n\n  ReverseOps.reverse = function (x, axis) {\n    util.assertArgumentsAreTensors({\n      x: x\n    }, 'reverse');\n\n    if (x.rank === 0) {\n      return x.clone();\n    }\n\n    var axes = axis_util_1.parseAxisParam(axis, x.shape);\n\n    var grad = function grad(dy) {\n      return {\n        x: function x() {\n          return dy.reverse(axes);\n        }\n      };\n    };\n\n    var res = environment_1.ENV.engine.runKernel(function (backend) {\n      return backend.reverse(x, axes);\n    }, {\n      x: x\n    }, grad);\n    return res.reshapeAs(x);\n  };\n\n  __decorate([doc_1.doc({\n    heading: 'Tensors',\n    subheading: 'Slicing and Joining'\n  }), operation_1.operation], ReverseOps, \"reverse\", null);\n\n  return ReverseOps;\n}();\n\nexports.ReverseOps = ReverseOps;","map":null,"metadata":{},"sourceType":"script"}