{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar errors_1 = require(\"../errors\");\n\nvar generic_utils_1 = require(\"./generic_utils\");\n\nvar math_utils_1 = require(\"./math_utils\");\n\nfunction normalizeArray(value, n, name) {\n  if (typeof value === 'number') {\n    return generic_utils_1.pyListRepeat(value, n);\n  } else {\n    if (value.length !== n) {\n      throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" + (value.length + \" elements.\"));\n    }\n\n    for (var i = 0; i < n; ++i) {\n      var singleValue = value[i];\n\n      if (!math_utils_1.isInteger(singleValue)) {\n        throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" + (JSON.stringify(value) + \" including a non-integer number \") + (\"\" + singleValue));\n      }\n    }\n\n    return value;\n  }\n}\n\nexports.normalizeArray = normalizeArray;\n\nfunction convOutputLength(inputLength, fliterSize, padding, stride, dilation) {\n  if (dilation === void 0) {\n    dilation = 1;\n  }\n\n  if (inputLength == null) {\n    return inputLength;\n  }\n\n  var dilatedFilterSize = fliterSize + (fliterSize - 1) * (dilation - 1);\n  var outputLength;\n\n  if (padding === 'same') {\n    outputLength = inputLength;\n  } else {\n    outputLength = inputLength - dilatedFilterSize + 1;\n  }\n\n  return Math.floor((outputLength + stride - 1) / stride);\n}\n\nexports.convOutputLength = convOutputLength;\n\nfunction deconvLength(dimSize, strideSize, kernelSize, padding) {\n  if (dimSize == null) {\n    return null;\n  }\n\n  if (padding === 'valid') {\n    dimSize = dimSize * strideSize + math_utils_1.max([kernelSize - strideSize, 0]);\n  } else if (padding === 'same') {\n    dimSize = dimSize * strideSize;\n  } else {\n    throw new errors_1.ValueError(\"Unsupport padding mode: \" + padding + \".\");\n  }\n\n  return dimSize;\n}\n\nexports.deconvLength = deconvLength;","map":null,"metadata":{},"sourceType":"script"}