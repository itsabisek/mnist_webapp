{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n\nvar constraints_1 = require(\"./constraints\");\n\nvar topology_1 = require(\"./engine/topology\");\n\nvar training_1 = require(\"./engine/training\");\n\nvar initializers_1 = require(\"./initializers\");\n\nvar advanced_activations_1 = require(\"./layers/advanced_activations\");\n\nvar convolutional_1 = require(\"./layers/convolutional\");\n\nvar convolutional_depthwise_1 = require(\"./layers/convolutional_depthwise\");\n\nvar core_1 = require(\"./layers/core\");\n\nvar embeddings_1 = require(\"./layers/embeddings\");\n\nvar merge_1 = require(\"./layers/merge\");\n\nvar normalization_1 = require(\"./layers/normalization\");\n\nvar padding_1 = require(\"./layers/padding\");\n\nvar pooling_1 = require(\"./layers/pooling\");\n\nvar recurrent_1 = require(\"./layers/recurrent\");\n\nvar wrappers_1 = require(\"./layers/wrappers\");\n\nvar losses_1 = require(\"./losses\");\n\nvar metrics_1 = require(\"./metrics\");\n\nvar models_1 = require(\"./models\");\n\nvar regularizers_1 = require(\"./regularizers\");\n\nvar ModelExports = function () {\n  function ModelExports() {}\n\n  ModelExports.model = function (config) {\n    return new training_1.Model(config);\n  };\n\n  ModelExports.sequential = function (config) {\n    return new models_1.Sequential(config);\n  };\n\n  ModelExports.loadModel = function (modelConfigPath) {\n    return models_1.loadModelInternal(modelConfigPath);\n  };\n\n  ModelExports.input = function (config) {\n    return topology_1.Input(config);\n  };\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Models',\n    subheading: 'Creation',\n    configParamIndices: [0]\n  })], ModelExports, \"model\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Models',\n    subheading: 'Creation',\n    configParamIndices: [0]\n  })], ModelExports, \"sequential\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Models',\n    subheading: 'Loading',\n    useDocsFrom: 'loadModelInternal'\n  })], ModelExports, \"loadModel\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Models',\n    subheading: 'Inputs',\n    useDocsFrom: 'Input',\n    configParamIndices: [0]\n  })], ModelExports, \"input\", null);\n\n  return ModelExports;\n}();\n\nexports.ModelExports = ModelExports;\n\nvar LayerExports = function () {\n  function LayerExports() {}\n\n  LayerExports.inputLayer = function (config) {\n    return new topology_1.InputLayer(config);\n  };\n\n  LayerExports.elu = function (config) {\n    return new advanced_activations_1.ELU(config);\n  };\n\n  LayerExports.leakyReLU = function (config) {\n    return new advanced_activations_1.LeakyReLU(config);\n  };\n\n  LayerExports.softmax = function (config) {\n    return new advanced_activations_1.Softmax(config);\n  };\n\n  LayerExports.thresholdedReLU = function (config) {\n    return new advanced_activations_1.ThresholdedReLU(config);\n  };\n\n  LayerExports.conv1d = function (config) {\n    return new convolutional_1.Conv1D(config);\n  };\n\n  LayerExports.conv2d = function (config) {\n    return new convolutional_1.Conv2D(config);\n  };\n\n  LayerExports.conv2dTranspose = function (config) {\n    return new convolutional_1.Conv2DTranspose(config);\n  };\n\n  LayerExports.separableConv2d = function (config) {\n    return new convolutional_1.SeparableConv2D(config);\n  };\n\n  LayerExports.depthwiseConv2d = function (config) {\n    return new convolutional_depthwise_1.DepthwiseConv2D(config);\n  };\n\n  LayerExports.activation = function (config) {\n    return new core_1.Activation(config);\n  };\n\n  LayerExports.dense = function (config) {\n    return new core_1.Dense(config);\n  };\n\n  LayerExports.dropout = function (config) {\n    return new core_1.Dropout(config);\n  };\n\n  LayerExports.flatten = function (config) {\n    return new core_1.Flatten(config);\n  };\n\n  LayerExports.repeatVector = function (config) {\n    return new core_1.RepeatVector(config);\n  };\n\n  LayerExports.reshape = function (config) {\n    return new core_1.Reshape(config);\n  };\n\n  LayerExports.embedding = function (config) {\n    return new embeddings_1.Embedding(config);\n  };\n\n  LayerExports.add = function (config) {\n    return new merge_1.Add(config);\n  };\n\n  LayerExports.average = function (config) {\n    return new merge_1.Average(config);\n  };\n\n  LayerExports.concatenate = function (config) {\n    return new merge_1.Concatenate(config);\n  };\n\n  LayerExports.maximum = function (config) {\n    return new merge_1.Maximum(config);\n  };\n\n  LayerExports.minimum = function (config) {\n    return new merge_1.Minimum(config);\n  };\n\n  LayerExports.multiply = function (config) {\n    return new merge_1.Multiply(config);\n  };\n\n  LayerExports.batchNormalization = function (config) {\n    return new normalization_1.BatchNormalization(config);\n  };\n\n  LayerExports.zeroPadding2d = function (config) {\n    return new padding_1.ZeroPadding2D(config);\n  };\n\n  LayerExports.averagePooling1d = function (config) {\n    return new pooling_1.AveragePooling1D(config);\n  };\n\n  LayerExports.avgPool1d = function (config) {\n    return LayerExports.averagePooling1d(config);\n  };\n\n  LayerExports.avgPooling1d = function (config) {\n    return LayerExports.averagePooling1d(config);\n  };\n\n  LayerExports.averagePooling2d = function (config) {\n    return new pooling_1.AveragePooling2D(config);\n  };\n\n  LayerExports.avgPool2d = function (config) {\n    return LayerExports.averagePooling2d(config);\n  };\n\n  LayerExports.avgPooling2d = function (config) {\n    return LayerExports.averagePooling2d(config);\n  };\n\n  LayerExports.globalAveragePooling1d = function (config) {\n    return new pooling_1.GlobalAveragePooling1D(config);\n  };\n\n  LayerExports.globalAveragePooling2d = function (config) {\n    return new pooling_1.GlobalAveragePooling2D(config);\n  };\n\n  LayerExports.globalMaxPooling1d = function (config) {\n    return new pooling_1.GlobalMaxPooling1D(config);\n  };\n\n  LayerExports.globalMaxPooling2d = function (config) {\n    return new pooling_1.GlobalMaxPooling2D(config);\n  };\n\n  LayerExports.maxPooling1d = function (config) {\n    return new pooling_1.MaxPooling1D(config);\n  };\n\n  LayerExports.maxPooling2d = function (config) {\n    return new pooling_1.MaxPooling2D(config);\n  };\n\n  LayerExports.gru = function (config) {\n    return new recurrent_1.GRU(config);\n  };\n\n  LayerExports.gruCell = function (config) {\n    return new recurrent_1.GRUCell(config);\n  };\n\n  LayerExports.lstm = function (config) {\n    return new recurrent_1.LSTM(config);\n  };\n\n  LayerExports.lstmCell = function (config) {\n    return new recurrent_1.LSTMCell(config);\n  };\n\n  LayerExports.simpleRNN = function (config) {\n    return new recurrent_1.SimpleRNN(config);\n  };\n\n  LayerExports.simpleRNNCell = function (config) {\n    return new recurrent_1.SimpleRNNCell(config);\n  };\n\n  LayerExports.rnn = function (config) {\n    return new recurrent_1.RNN(config);\n  };\n\n  LayerExports.stackedRNNCells = function (config) {\n    return new recurrent_1.StackedRNNCells(config);\n  };\n\n  LayerExports.bidirectional = function (config) {\n    return new wrappers_1.Bidirectional(config);\n  };\n\n  LayerExports.timeDistributed = function (config) {\n    return new wrappers_1.TimeDistributed(config);\n  };\n\n  LayerExports.Layer = topology_1.Layer;\n  LayerExports.RNNCell = recurrent_1.RNNCell;\n  LayerExports.input = ModelExports.input;\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Inputs',\n    namespace: 'layers',\n    useDocsFrom: 'InputLayer',\n    configParamIndices: [0]\n  })], LayerExports, \"inputLayer\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Advanced Activation',\n    namespace: 'layers',\n    useDocsFrom: 'ELU',\n    configParamIndices: [0]\n  })], LayerExports, \"elu\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Advanced Activation',\n    namespace: 'layers',\n    useDocsFrom: 'LeakyReLU',\n    configParamIndices: [0]\n  })], LayerExports, \"leakyReLU\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Advanced Activation',\n    namespace: 'layers',\n    useDocsFrom: 'Softmax',\n    configParamIndices: [0]\n  })], LayerExports, \"softmax\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Advanced Activation',\n    namespace: 'layers',\n    useDocsFrom: 'ThresholdedReLU',\n    configParamIndices: [0]\n  })], LayerExports, \"thresholdedReLU\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Convolutional',\n    namespace: 'layers',\n    useDocsFrom: 'Conv1D',\n    configParamIndices: [0]\n  })], LayerExports, \"conv1d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Convolutional',\n    namespace: 'layers',\n    useDocsFrom: 'Conv2D',\n    configParamIndices: [0]\n  })], LayerExports, \"conv2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Convolutional',\n    namespace: 'layers',\n    useDocsFrom: 'Conv2DTranspose',\n    configParamIndices: [0]\n  })], LayerExports, \"conv2dTranspose\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Convolutional',\n    namespace: 'layers',\n    useDocsFrom: 'SeparableConv2D',\n    configParamIndices: [0]\n  })], LayerExports, \"separableConv2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Convolutional',\n    namespace: 'layers',\n    useDocsFrom: 'DepthwiseConv2D',\n    configParamIndices: [0]\n  })], LayerExports, \"depthwiseConv2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Activation',\n    configParamIndices: [0]\n  })], LayerExports, \"activation\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Dense',\n    configParamIndices: [0]\n  })], LayerExports, \"dense\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Dropout',\n    configParamIndices: [0]\n  })], LayerExports, \"dropout\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Flatten',\n    configParamIndices: [0]\n  })], LayerExports, \"flatten\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'RepeatVector',\n    configParamIndices: [0]\n  })], LayerExports, \"repeatVector\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Reshape',\n    configParamIndices: [0]\n  })], LayerExports, \"reshape\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Basic',\n    namespace: 'layers',\n    useDocsFrom: 'Embedding',\n    configParamIndices: [0]\n  })], LayerExports, \"embedding\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Add',\n    configParamIndices: [0]\n  })], LayerExports, \"add\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Average',\n    configParamIndices: [0]\n  })], LayerExports, \"average\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Concatenate',\n    configParamIndices: [0]\n  })], LayerExports, \"concatenate\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Maximum',\n    configParamIndices: [0]\n  })], LayerExports, \"maximum\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Minimum',\n    configParamIndices: [0]\n  })], LayerExports, \"minimum\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Merge',\n    namespace: 'layers',\n    useDocsFrom: 'Multiply',\n    configParamIndices: [0]\n  })], LayerExports, \"multiply\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Normalization',\n    namespace: 'layers',\n    useDocsFrom: 'BatchNormalization',\n    configParamIndices: [0]\n  })], LayerExports, \"batchNormalization\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Padding',\n    namespace: 'layers',\n    useDocsFrom: 'ZeroPadding2D',\n    configParamIndices: [0]\n  })], LayerExports, \"zeroPadding2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'AveragePooling1D',\n    configParamIndices: [0]\n  })], LayerExports, \"averagePooling1d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'AveragePooling2D',\n    configParamIndices: [0]\n  })], LayerExports, \"averagePooling2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'GlobalAveragePooling1D',\n    configParamIndices: [0]\n  })], LayerExports, \"globalAveragePooling1d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'GlobalAveragePooling2D',\n    configParamIndices: [0]\n  })], LayerExports, \"globalAveragePooling2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'GlobalMaxPooling1D',\n    configParamIndices: [0]\n  })], LayerExports, \"globalMaxPooling1d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'GlobalMaxPooling2D',\n    configParamIndices: [0]\n  })], LayerExports, \"globalMaxPooling2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'MaxPooling1D',\n    configParamIndices: [0]\n  })], LayerExports, \"maxPooling1d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Pooling',\n    namespace: 'layers',\n    useDocsFrom: 'MaxPooling2D',\n    configParamIndices: [0]\n  })], LayerExports, \"maxPooling2d\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'GRU',\n    configParamIndices: [0]\n  })], LayerExports, \"gru\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'GRUCell',\n    configParamIndices: [0]\n  })], LayerExports, \"gruCell\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'LSTM',\n    configParamIndices: [0]\n  })], LayerExports, \"lstm\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'LSTMCell',\n    configParamIndices: [0]\n  })], LayerExports, \"lstmCell\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'SimpleRNN',\n    configParamIndices: [0]\n  })], LayerExports, \"simpleRNN\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'SimpleRNNCell',\n    configParamIndices: [0]\n  })], LayerExports, \"simpleRNNCell\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'RNN',\n    configParamIndices: [0]\n  })], LayerExports, \"rnn\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Recurrent',\n    namespace: 'layers',\n    useDocsFrom: 'RNN',\n    configParamIndices: [0]\n  })], LayerExports, \"stackedRNNCells\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Wrapper',\n    namespace: 'layers',\n    useDocsFrom: 'Bidirectional',\n    configParamIndices: [0]\n  })], LayerExports, \"bidirectional\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Layers',\n    subheading: 'Wrapper',\n    namespace: 'layers',\n    useDocsFrom: 'TimeDistributed',\n    configParamIndices: [0]\n  })], LayerExports, \"timeDistributed\", null);\n\n  return LayerExports;\n}();\n\nexports.LayerExports = LayerExports;\n\nvar ConstraintExports = function () {\n  function ConstraintExports() {}\n\n  ConstraintExports.maxNorm = function (config) {\n    return new constraints_1.MaxNorm(config);\n  };\n\n  ConstraintExports.unitNorm = function (config) {\n    return new constraints_1.UnitNorm(config);\n  };\n\n  ConstraintExports.nonNeg = function () {\n    return new constraints_1.NonNeg();\n  };\n\n  ConstraintExports.minMaxNorm = function (config) {\n    return new constraints_1.MinMaxNorm(config);\n  };\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Constraints',\n    namespace: 'constraints',\n    useDocsFrom: 'MaxNorm',\n    configParamIndices: [0]\n  })], ConstraintExports, \"maxNorm\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Constraints',\n    namespace: 'constraints',\n    useDocsFrom: 'UnitNorm',\n    configParamIndices: [0]\n  })], ConstraintExports, \"unitNorm\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Constraints',\n    namespace: 'constraints',\n    useDocsFrom: 'NonNeg'\n  })], ConstraintExports, \"nonNeg\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Constraints',\n    namespace: 'constraints',\n    useDocsFrom: 'MinMaxNormConfig',\n    configParamIndices: [0]\n  })], ConstraintExports, \"minMaxNorm\", null);\n\n  return ConstraintExports;\n}();\n\nexports.ConstraintExports = ConstraintExports;\n\nvar InitializerExports = function () {\n  function InitializerExports() {}\n\n  InitializerExports.zeros = function () {\n    return new initializers_1.Zeros();\n  };\n\n  InitializerExports.ones = function () {\n    return new initializers_1.Ones();\n  };\n\n  InitializerExports.constant = function (config) {\n    return new initializers_1.Constant(config);\n  };\n\n  InitializerExports.randomUniform = function (config) {\n    return new initializers_1.RandomUniform(config);\n  };\n\n  InitializerExports.randomNormal = function (config) {\n    return new initializers_1.RandomNormal(config);\n  };\n\n  InitializerExports.truncatedNormal = function (config) {\n    return new initializers_1.TruncatedNormal(config);\n  };\n\n  InitializerExports.identity = function (config) {\n    return new initializers_1.Identity(config);\n  };\n\n  InitializerExports.varianceScaling = function (config) {\n    return new initializers_1.VarianceScaling(config);\n  };\n\n  InitializerExports.glorotUniform = function (config) {\n    return new initializers_1.GlorotUniform(config);\n  };\n\n  InitializerExports.glorotNormal = function (config) {\n    return new initializers_1.GlorotNormal(config);\n  };\n\n  InitializerExports.heNormal = function (config) {\n    return new initializers_1.HeNormal(config);\n  };\n\n  InitializerExports.leCunNormal = function (config) {\n    return new initializers_1.LeCunNormal(config);\n  };\n\n  InitializerExports.orthogonal = function (config) {\n    return new initializers_1.Orthogonal(config);\n  };\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'Zeros'\n  })], InitializerExports, \"zeros\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'Ones'\n  })], InitializerExports, \"ones\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'Constant',\n    configParamIndices: [0]\n  })], InitializerExports, \"constant\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'RandomUniform',\n    configParamIndices: [0]\n  })], InitializerExports, \"randomUniform\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'RandomNormal',\n    configParamIndices: [0]\n  })], InitializerExports, \"randomNormal\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'TruncatedNormal',\n    configParamIndices: [0]\n  })], InitializerExports, \"truncatedNormal\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'Identity',\n    configParamIndices: [0]\n  })], InitializerExports, \"identity\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'VarianceScaling',\n    configParamIndices: [0]\n  })], InitializerExports, \"varianceScaling\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'GlorotUniform',\n    configParamIndices: [0]\n  })], InitializerExports, \"glorotUniform\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'GlorotNormal',\n    configParamIndices: [0]\n  })], InitializerExports, \"glorotNormal\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'HeNormal',\n    configParamIndices: [0]\n  })], InitializerExports, \"heNormal\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'LeCunNormal',\n    configParamIndices: [0]\n  })], InitializerExports, \"leCunNormal\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Initializers',\n    namespace: 'initializers',\n    useDocsFrom: 'Orthogonal',\n    configParamIndices: [0]\n  })], InitializerExports, \"orthogonal\", null);\n\n  return InitializerExports;\n}();\n\nexports.InitializerExports = InitializerExports;\n\nvar MetricExports = function () {\n  function MetricExports() {}\n\n  MetricExports.binaryAccuracy = function (yTrue, yPred) {\n    return metrics_1.binaryAccuracy(yTrue, yPred);\n  };\n\n  MetricExports.binaryCrossentropy = function (yTrue, yPred) {\n    return metrics_1.binaryCrossentropy(yTrue, yPred);\n  };\n\n  MetricExports.categoricalAccuracy = function (yTrue, yPred) {\n    return metrics_1.categoricalAccuracy(yTrue, yPred);\n  };\n\n  MetricExports.categoricalCrossentropy = function (yTrue, yPred) {\n    return losses_1.categoricalCrossentropy(yTrue, yPred);\n  };\n\n  MetricExports.cosineProximity = function (yTrue, yPred) {\n    return losses_1.cosineProximity(yTrue, yPred);\n  };\n\n  MetricExports.prototype.meanAbsoluteError = function (yTrue, yPred) {\n    return losses_1.meanAbsoluteError(yTrue, yPred);\n  };\n\n  MetricExports.prototype.meanAbsolutePercentageError = function (yTrue, yPred) {\n    return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n  };\n\n  MetricExports.prototype.MAPE = function (yTrue, yPred) {\n    return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n  };\n\n  MetricExports.prototype.mape = function (yTrue, yPred) {\n    return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n  };\n\n  MetricExports.meanSquaredError = function (yTrue, yPred) {\n    return losses_1.meanSquaredError(yTrue, yPred);\n  };\n\n  MetricExports.MSE = function (yTrue, yPred) {\n    return losses_1.meanSquaredError(yTrue, yPred);\n  };\n\n  MetricExports.mse = function (yTrue, yPred) {\n    return losses_1.meanSquaredError(yTrue, yPred);\n  };\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'meanAbsoluteError'\n  })], MetricExports.prototype, \"meanAbsoluteError\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'meanAbsolutePercentageError'\n  })], MetricExports.prototype, \"meanAbsolutePercentageError\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'binaryAccuracy'\n  })], MetricExports, \"binaryAccuracy\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'binaryCrossentropy'\n  })], MetricExports, \"binaryCrossentropy\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'categoricalAccuracy'\n  })], MetricExports, \"categoricalAccuracy\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'categoricalCrossentropy'\n  })], MetricExports, \"categoricalCrossentropy\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'cosineProximity'\n  })], MetricExports, \"cosineProximity\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Metrics',\n    namespace: 'metrics',\n    useDocsFrom: 'meanSquaredError'\n  })], MetricExports, \"meanSquaredError\", null);\n\n  return MetricExports;\n}();\n\nexports.MetricExports = MetricExports;\n\nvar RegularizerExports = function () {\n  function RegularizerExports() {}\n\n  RegularizerExports.l1l2 = function (config) {\n    return new regularizers_1.L1L2(config);\n  };\n\n  RegularizerExports.l1 = function (config) {\n    return regularizers_1.l1(config);\n  };\n\n  RegularizerExports.l2 = function (config) {\n    return regularizers_1.l2(config);\n  };\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Regularizers',\n    namespace: 'regularizers',\n    useDocsFrom: 'L1L2'\n  })], RegularizerExports, \"l1l2\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Regularizers',\n    namespace: 'regularizers',\n    useDocsFrom: 'L1L2'\n  })], RegularizerExports, \"l1\", null);\n\n  __decorate([tfjs_core_1.doc({\n    heading: 'Regularizers',\n    namespace: 'regularizers',\n    useDocsFrom: 'L1L2'\n  })], RegularizerExports, \"l2\", null);\n\n  return RegularizerExports;\n}();\n\nexports.RegularizerExports = RegularizerExports;","map":null,"metadata":{},"sourceType":"script"}