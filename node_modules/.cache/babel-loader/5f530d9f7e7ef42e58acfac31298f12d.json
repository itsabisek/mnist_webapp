{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shader_compiler_1 = require(\"./shader_compiler\");\n\nvar TransposeProgram = function () {\n  function TransposeProgram(aShape, newDim) {\n    this.variableNames = ['A'];\n    var outputShape = new Array(aShape.length);\n\n    for (var i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n    var switched = getSwitchedCoords(newDim);\n    this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n  }\n\n  return TransposeProgram;\n}();\n\nexports.TransposeProgram = TransposeProgram;\n\nfunction getSwitchedCoords(newDim) {\n  var rank = newDim.length;\n\n  if (rank > 4) {\n    throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n  }\n\n  var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var switchedCoords = new Array(rank);\n\n  for (var i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n\n  return switchedCoords.join();\n}","map":null,"metadata":{},"sourceType":"script"}