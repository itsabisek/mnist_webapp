{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar doc_1 = require(\"./doc\");\n\nvar environment_1 = require(\"./environment\");\n\nvar util_1 = require(\"./util\");\n\nvar Tracking = function () {\n  function Tracking() {}\n\n  Tracking.tidy = function (nameOrFn, fn, gradMode) {\n    if (gradMode === void 0) {\n      gradMode = false;\n    }\n\n    var name = null;\n\n    if (fn == null) {\n      if (typeof nameOrFn !== 'function') {\n        throw new Error('Please provide a function to tidy()');\n      }\n\n      fn = nameOrFn;\n    } else {\n      if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n        throw new Error('When calling with two arguments, the first argument ' + 'to tidy() must be a string');\n      }\n\n      if (typeof fn !== 'function') {\n        throw new Error('When calling with two arguments, the 2nd argument ' + 'to tidy() must be a function');\n      }\n\n      name = nameOrFn;\n    }\n\n    environment_1.ENV.engine.startScope(name, gradMode);\n    var result = fn();\n\n    if (result instanceof Promise) {\n      console.error('Cannot return a Promise inside of tidy.');\n    }\n\n    environment_1.ENV.engine.endScope(result, gradMode);\n    return result;\n  };\n\n  Tracking.dispose = function (container) {\n    var tensors = util_1.extractTensorsFromAny(container);\n    tensors.forEach(function (tensor) {\n      return tensor.dispose();\n    });\n  };\n\n  Tracking.keep = function (result) {\n    return environment_1.ENV.engine.keep(result);\n  };\n\n  Tracking.time = function (f) {\n    return environment_1.ENV.engine.time(f);\n  };\n\n  __decorate([doc_1.doc({\n    heading: 'Performance',\n    subheading: 'Memory'\n  })], Tracking, \"tidy\", null);\n\n  __decorate([doc_1.doc({\n    heading: 'Performance',\n    subheading: 'Memory'\n  })], Tracking, \"keep\", null);\n\n  __decorate([doc_1.doc({\n    heading: 'Performance',\n    subheading: 'Timing'\n  })], Tracking, \"time\", null);\n\n  return Tracking;\n}();\n\nexports.Tracking = Tracking;","map":null,"metadata":{},"sourceType":"script"}