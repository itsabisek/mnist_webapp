{"ast":null,"code":"var _jsxFileName = \"/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/Canvas.js\";\nimport React from 'react';\nexport class Canvas extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clearCanvas = () => {\n      const ctx = this.refs.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n    };\n  }\n\n  componentDidMount() {\n    // const {canvasHeight, canvasWidth} = this.state.canvasDims\n    // this.refs.canvas.height = canvasHeight\n    // this.refs.canvas.width = canvasWidth\n    this.setupCanvas();\n  }\n\n  componentDidUpdate() {\n    // const {canvasHeight, canvasWidth} = this.state.canvasDims\n    // this.refs.canvas.height = canvasHeight\n    // this.refs.canvas.width = canvasWidth\n    this.setupCanvas();\n  }\n\n  setupCanvas() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext('2d');\n    let penDown = false;\n\n    let startDrawing = () => {\n      penDown = true;\n    };\n\n    let endDrawing = () => {\n      penDown = false;\n      ctx.beginPath();\n    };\n\n    let draw = e => {\n      if (!penDown) return;\n      ctx.lineWidth = 5;\n      ctx.lineCap = 'round';\n      ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n      ctx.stroke();\n    };\n\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mouseup', endDrawing);\n    canvas.addEventListener('mousemove', draw);\n  }\n\n  render() {\n    var canvasStyle = {\n      \"border\": \"2px solid black\",\n      \"marginTop\": \"10%\",\n      \"marginLeft\": \"10%\",\n      \"marginRight\": \"90%\",\n      \"marginBottom\": \"90%\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      width: \"500\",\n      height: \"500\",\n      ref: \"canvas\",\n      style: canvasStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sorry your browser does not support canvas\"), React.createElement(\"button\", {\n      onClick: this.clearCanvas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n}","map":{"version":3,"sources":["/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/Canvas.js"],"names":["React","Canvas","Component","clearCanvas","ctx","refs","canvas","getContext","clearRect","width","height","componentDidMount","setupCanvas","componentDidUpdate","penDown","startDrawing","endDrawing","beginPath","draw","e","lineWidth","lineCap","lineTo","clientX","offsetLeft","clientY","offsetTop","stroke","addEventListener","render","canvasStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAkD3CC,WAlD2C,GAkD7B,MAAM;AACnB,YAAMC,GAAG,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ;AACAH,MAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKH,IAAL,CAAUC,MAAV,CAAiBG,KAArC,EAA4C,KAAKJ,IAAL,CAAUC,MAAV,CAAiBI,MAA7D;AACA,KArD0C;AAAA;;AAE3CC,EAAAA,iBAAiB,GAAG;AAEnB;AACA;AACA;AACA,SAAKC,WAAL;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB;AACA;AACA;AAEA,SAAKD,WAAL;AACA;;AAEDA,EAAAA,WAAW,GAAG;AACb,UAAMN,MAAM,GAAG,KAAKD,IAAL,CAAUC,MAAzB;AACA,UAAMF,GAAG,GAAGE,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAZ;AAEA,QAAIO,OAAO,GAAG,KAAd;;AAEA,QAAIC,YAAY,GAAG,MAAM;AACxBD,MAAAA,OAAO,GAAG,IAAV;AACA,KAFD;;AAIA,QAAIE,UAAU,GAAG,MAAM;AACtBF,MAAAA,OAAO,GAAG,KAAV;AACAV,MAAAA,GAAG,CAACa,SAAJ;AACA,KAHD;;AAKA,QAAIC,IAAI,GAAGC,CAAC,IAAI;AACf,UAAI,CAACL,OAAL,EACC;AAEDV,MAAAA,GAAG,CAACgB,SAAJ,GAAgB,CAAhB;AACAhB,MAAAA,GAAG,CAACiB,OAAJ,GAAc,OAAd;AACAjB,MAAAA,GAAG,CAACkB,MAAJ,CAAWH,CAAC,CAACI,OAAF,GAAYjB,MAAM,CAACkB,UAA9B,EAA0CL,CAAC,CAACM,OAAF,GAAYnB,MAAM,CAACoB,SAA7D;AACAtB,MAAAA,GAAG,CAACuB,MAAJ;AAEA,KATD;;AAWArB,IAAAA,MAAM,CAACsB,gBAAP,CAAwB,WAAxB,EAAqCb,YAArC;AACAT,IAAAA,MAAM,CAACsB,gBAAP,CAAwB,SAAxB,EAAmCZ,UAAnC;AACAV,IAAAA,MAAM,CAACsB,gBAAP,CAAwB,WAAxB,EAAqCV,IAArC;AAEA;;AAODW,EAAAA,MAAM,GAAG;AAER,QAAIC,WAAW,GAAG;AACjB,gBAAU,iBADO;AAEjB,mBAAa,KAFI;AAGjB,oBAAc,KAHG;AAIjB,qBAAe,KAJE;AAKjB,sBAAgB;AALC,KAAlB;AAQA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,KAA3B;AAAiC,MAAA,GAAG,EAAC,QAArC;AAA8C,MAAA,KAAK,EAAEA,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADO,EAIP;AAAQ,MAAA,OAAO,EAAE,KAAK3B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJO,CAAR;AAMA;;AAvE0C","sourcesContent":["import React from 'react'\n\nexport class Canvas extends React.Component {\n\n\tcomponentDidMount() {\n\n\t\t// const {canvasHeight, canvasWidth} = this.state.canvasDims\n\t\t// this.refs.canvas.height = canvasHeight\n\t\t// this.refs.canvas.width = canvasWidth\n\t\tthis.setupCanvas()\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// const {canvasHeight, canvasWidth} = this.state.canvasDims\n\t\t// this.refs.canvas.height = canvasHeight\n\t\t// this.refs.canvas.width = canvasWidth\n\n\t\tthis.setupCanvas()\n\t}\n\n\tsetupCanvas() {\n\t\tconst canvas = this.refs.canvas\n\t\tconst ctx = canvas.getContext('2d')\n\n\t\tlet penDown = false\n\n\t\tlet startDrawing = () => {\n\t\t\tpenDown = true\n\t\t}\n\n\t\tlet endDrawing = () => {\n\t\t\tpenDown = false\n\t\t\tctx.beginPath()\n\t\t}\n\n\t\tlet draw = e => {\n\t\t\tif (!penDown) \n\t\t\t\treturn\n\n\t\t\tctx.lineWidth = 5\n\t\t\tctx.lineCap = 'round'\n\t\t\tctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n\t\t\tctx.stroke()\n\n\t\t}\n\n\t\tcanvas.addEventListener('mousedown', startDrawing)\n\t\tcanvas.addEventListener('mouseup', endDrawing)\n\t\tcanvas.addEventListener('mousemove', draw)\n\n\t}\n\n\tclearCanvas = () => {\n\t\tconst ctx = this.refs.canvas.getContext('2d')\n\t\tctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height)\n\t}\n\n\trender() {\n\n\t\tvar canvasStyle = {\n\t\t\t\"border\": \"2px solid black\",\n\t\t\t\"marginTop\": \"10%\",\n\t\t\t\"marginLeft\": \"10%\",\n\t\t\t\"marginRight\": \"90%\",\n\t\t\t\"marginBottom\": \"90%\"\n\t\t}\n\n\t\treturn (<div>\n\t\t\t<canvas width=\"500\" height=\"500\" ref=\"canvas\" style={canvasStyle}>\n\t\t\t\tSorry your browser does not support canvas\n\t\t\t</canvas>\n\t\t\t<button onClick={this.clearCanvas}>Clear</button>\n\t\t</div>)\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}