{"ast":null,"code":"var tf = require('@tensorflow/tfjs');\n\nlet model = null;\nlet uri = window.location.href + 'modelJS/model.json';\nexport const loadModel = async () => {\n  try {\n    model = await tf.loadLayersModel(uri);\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.log(model);\n  return model;\n};\nexport const predict = (model, imageData) => {\n  const data = tf.browser.fromPixels(imageData, 1);\n  const predictions = model.predict(data, {\n    batchSize: 1\n  });\n  console.log(predictions);\n};","map":{"version":3,"sources":["/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/Main.js"],"names":["tf","require","model","uri","window","location","href","loadModel","loadLayersModel","e","console","log","predict","imageData","data","browser","fromPixels","predictions","batchSize"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAhB;;AAEA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,oBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACpC,MAAG;AACFL,IAAAA,KAAK,GAAG,MAAMF,EAAE,CAACQ,eAAH,CAAmBL,GAAnB,CAAd;AACA,GAFD,CAEC,OAAMM,CAAN,EAAQ;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAOA,KAAP;AACA,CARM;AAWP,OAAO,MAAMU,OAAO,GAAG,CAACV,KAAD,EAAOW,SAAP,KAAqB;AAC3C,QAAMC,IAAI,GAAGd,EAAE,CAACe,OAAH,CAAWC,UAAX,CAAsBH,SAAtB,EAAgC,CAAhC,CAAb;AACA,QAAMI,WAAW,GAAGf,KAAK,CAACU,OAAN,CAAcE,IAAd,EAAmB;AAACI,IAAAA,SAAS,EAAE;AAAZ,GAAnB,CAApB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AACA,CAJM","sourcesContent":["var tf = require('@tensorflow/tfjs')\n\nlet model = null\nlet uri = window.location.href + 'modelJS/model.json'\n\nexport const loadModel = async () => {\n\ttry{\n\t\tmodel = await tf.loadLayersModel(uri)\n\t}catch(e){\n\t\tconsole.log(e)\n\t}\n\tconsole.log(model)\n\treturn model\n}\n\n\nexport const predict = (model,imageData) => {\n\tconst data = tf.browser.fromPixels(imageData,1)\n\tconst predictions = model.predict(data,{batchSize: 1})\n\tconsole.log(predictions);\n}\n"]},"metadata":{},"sourceType":"module"}