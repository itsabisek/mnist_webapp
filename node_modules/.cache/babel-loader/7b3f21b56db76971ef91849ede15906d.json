{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shader_compiler_1 = require(\"./shader_compiler\");\n\nvar GatherProgram = function () {\n  function GatherProgram(aShape, indicesLength, axis) {\n    this.variableNames = ['A', 'indices'];\n    var outputShape = aShape.slice();\n    outputShape[axis] = indicesLength;\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n    var sourceCoords = getSourceCoords(aShape, axis);\n    this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n  }\n\n  return GatherProgram;\n}();\n\nexports.GatherProgram = GatherProgram;\n\nfunction getSourceCoords(aShape, axis) {\n  var rank = aShape.length;\n\n  if (rank > 4) {\n    throw Error(\"Gather for rank \" + rank + \" is not yet supported\");\n  }\n\n  if (rank === 1) {\n    return \"int(getIndices(resRC))\";\n  }\n\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    if (i === axis) {\n      sourceCoords.push(\"int(getIndices(\" + currentCoords[i] + \"))\");\n    } else {\n      sourceCoords.push(\"\" + currentCoords[i]);\n    }\n  }\n\n  return sourceCoords.join();\n}","map":null,"metadata":{},"sourceType":"script"}