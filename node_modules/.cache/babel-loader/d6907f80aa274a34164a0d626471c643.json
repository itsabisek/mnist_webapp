{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shader_compiler_1 = require(\"./shader_compiler\");\n\nvar SliceProgram = function () {\n  function SliceProgram(destSize) {\n    this.variableNames = ['source'];\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n    var sourceCoords = getCoords(this.rank);\n    this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n  }\n\n  SliceProgram.prototype.getCustomSetupFunc = function (start) {\n    var _this = this;\n\n    if (start.length !== this.rank) {\n      throw Error(\"The rank (\" + this.rank + \") of the program must match the \" + (\"length of start (\" + start.length + \")\"));\n    }\n\n    return function (gpgpu, webGLProgram) {\n      if (_this.startLoc == null) {\n        _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n        if (_this.startLoc == null) {\n          return;\n        }\n      }\n\n      if (_this.rank === 1) {\n        gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n      } else if (_this.rank === 2) {\n        gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n      } else if (_this.rank === 3) {\n        gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n      } else if (_this.rank === 4) {\n        gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n      } else {\n        throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n      }\n    };\n  };\n\n  return SliceProgram;\n}();\n\nexports.SliceProgram = SliceProgram;\n\nfunction getCoords(rank) {\n  if (rank === 1) {\n    return 'sourceLoc';\n  } else if (rank === 2) {\n    return 'sourceLoc.x, sourceLoc.y';\n  } else if (rank === 3) {\n    return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n  } else if (rank === 4) {\n    return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n  } else {\n    throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n  }\n}","map":null,"metadata":{},"sourceType":"script"}