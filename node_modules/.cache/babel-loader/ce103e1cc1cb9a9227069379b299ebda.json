{"ast":null,"code":"var tf = require('@tensorflow/tfjs'); // let uri = window.location.href + 'modelJS/model.json'\n// export const loadModel = async () => {\n// \ttry{\n// \t\treturn await tf.loadLayersModel(uri)\n// \t}catch(e){\n// \t\tconsole.log(e)\n// \t}\n// \t// console.log(model)\n// }\n\n\nexport const predict = (model, imageData) => {\n  const data = tf.browser.fromPixels(imageData, 1);\n  data = tf.image.resizeNearestNeighbor(data, [28, 28]);\n  data = tf.expandDims(data);\n  const predictions = model.predict(data, {\n    batchSize: 1\n  });\n  console.log(predictions);\n};","map":{"version":3,"sources":["/home/abisek/Python/DL/heroku-apps/mnist_webapp/mnist-webapp/src/components/Main.js"],"names":["tf","require","predict","model","imageData","data","browser","fromPixels","image","resizeNearestNeighbor","expandDims","predictions","batchSize","console","log"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAhB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,SAAP,KAAqB;AAC3C,QAAMC,IAAI,GAAGL,EAAE,CAACM,OAAH,CAAWC,UAAX,CAAsBH,SAAtB,EAAgC,CAAhC,CAAb;AACAC,EAAAA,IAAI,GAAGL,EAAE,CAACQ,KAAH,CAASC,qBAAT,CAA+BJ,IAA/B,EAAoC,CAAC,EAAD,EAAI,EAAJ,CAApC,CAAP;AACAA,EAAAA,IAAI,GAAGL,EAAE,CAACU,UAAH,CAAcL,IAAd,CAAP;AACA,QAAMM,WAAW,GAAGR,KAAK,CAACD,OAAN,CAAcG,IAAd,EAAmB;AAACO,IAAAA,SAAS,EAAE;AAAZ,GAAnB,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,CANM","sourcesContent":["var tf = require('@tensorflow/tfjs')\n\n// let uri = window.location.href + 'modelJS/model.json'\n\n// export const loadModel = async () => {\n// \ttry{\n// \t\treturn await tf.loadLayersModel(uri)\n// \t}catch(e){\n// \t\tconsole.log(e)\n// \t}\n// \t// console.log(model)\n// }\n\n\nexport const predict = (model,imageData) => {\n\tconst data = tf.browser.fromPixels(imageData,1)\n\tdata = tf.image.resizeNearestNeighbor(data,[28,28])\n\tdata = tf.expandDims(data)\n\tconst predictions = model.predict(data,{batchSize: 1})\n\tconsole.log(predictions);\n}\n"]},"metadata":{},"sourceType":"module"}